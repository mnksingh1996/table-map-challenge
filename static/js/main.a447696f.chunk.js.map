{"version":3,"sources":["constants/Theme.js","shared/Map/index.js","shared/Table/styles.js","shared/Table/index.js","constants/GlobalStyles.js","constants/MapDarkStyle.js","app/styles.js","app/index.js","serviceWorker.js","index.js","assets/sprite.svg"],"names":["colors","dark__green","medium__green","light__green","sea__green","dark__grey","light__grey","dark__yellow","light__yellow","black","dark__blue","light__blue","theme","light","dark","Marker","text","tooltip","region","title","fill","xlinkHref","Sprite","MapComponent","style","height","width","bootstrapURLKeys","key","process","defaultCenter","this","props","center","defaultZoom","zoom","options","table_data","map","data","item","id","lat","lng","meta","name","volume","Component","defaultProps","styles","border_collapse","css","cellPadding","TableWrapper","styled","div","Table","table","Row","tr","TableHead","thead","TableBody","tbody","TableHeadCell","th","TableCell","td","TableComponent","handleChange","e","current_table_index","type","all_table_data","setTableData","tableIndex","findIndex","new_table_data","cloneDeep","new_meta","target","value","Object","assign","clearSelected","disabled","onChange","onClick","i","checked","placeholder","className","GlobalStyles","createGlobalStyle","mapStyles","elementType","stylers","color","featureType","showMenuStyle","Header","header","Nav","nav","back","showMenu","Main","main","Footer","footer","TableContainer","theme_options","keys","Theme","dummy_data","uuid","initial_table_data","App","useState","current_theme","setTheme","show_menu","setShowMenu","show","Map","MapDarkStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a447696f.chunk.js","sourcesContent":["const colors = {\n  dark__green: \"#80c464\",\n  medium__green: \"#a7c941\",\n  light__green: \"#ebf2d3\",\n  sea__green: \"#00968a\",\n  dark__grey: \"#929bac\",\n  light__grey: \"#f4f5f7\",\n  dark__yellow: \"#fff2cd\",\n  light__yellow: \"#fff8e5\",\n  black: \"#1f1f1f\",\n  dark__blue: \"#0079d6\",\n  light__blue: \"#7fbce9\"\n};\n\nconst theme = {\n  light: { ...colors },\n  dark: {\n    ...colors,\n    light__yellow: colors.light__green,\n    light__green: colors.light__yellow,\n    sea__green: colors.medium__green,\n    medium__green: colors.sea__green,\n    dark__yellow: colors.sea__green\n  }\n};\n\nexport default theme;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\n\nimport Sprite from \"../../assets/sprite.svg\";\n\nconst Marker = ({ text, tooltip, region }) => (\n  <div title={tooltip}>\n    {text} ({region})\n    <svg fill=\"red\">\n      <use xlinkHref={`${Sprite}#icon-location2`} />\n    </svg>\n  </div>\n);\n\nclass MapComponent extends Component {\n  static defaultProps = {\n    center: {\n      lat: 28.7041,\n      lng: 77.1025\n    },\n    zoom: 11,\n    options: {\n      styles: {}\n    },\n    table_data: []\n  };\n\n  render() {\n    return (\n      <div style={{ height: \"50vh\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_MAPS_API_KEY }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          options={this.props.options}\n        >\n          {this.props.table_data.map(data =>\n            data.data.map(item => (\n              <Marker\n                key={item.id}\n                lat={item.lat}\n                lng={item.lng}\n                region={data.meta.region}\n                text={item.name}\n                tooltip={item.volume}\n              />\n            ))\n          )}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default MapComponent;\n","import styled, { css } from \"styled-components\";\n\n// Utilities Start\n\nconst border_collapse = css`\n  border: 2px solid ${props => props.theme.medium__green};\n  border-collapse: collapse;\n`;\n\nconst cellPadding = css`\n  padding: 10px;\n`;\n\n// Utilities End\n\n// Table Start\n\nexport const TableWrapper = styled.div`\n  width: 48%;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  margin-top: 20px;\n  text-align: left;\n  ${border_collapse};\n`;\n\nexport const Row = styled.tr``;\n\nexport const TableHead = styled.thead`\n  color: white;\n  background-color: ${props => props.theme.medium__green};\n`;\n\nexport const TableBody = styled.tbody`\n  ${Row} {\n    &:nth-child(odd) {\n      background-color: ${props => props.theme.light__yellow};\n    }\n\n    &:nth-child(even) {\n      background-color: ${props => props.theme.light__green};\n    }\n  }\n`;\n\nexport const TableHeadCell = styled.th`\n  ${border_collapse};\n  ${cellPadding};\n`;\n\nexport const TableCell = styled.td`\n  ${border_collapse};\n  ${cellPadding};\n\n  .two {\n    display: flex;\n    input:first-child {\n      margin-right: 10px;\n    }\n  }\n`;\n\n// Table End\n","import React, { Component } from \"react\";\nimport { cloneDeep } from \"lodash\";\n// import { fitBounds } from \"google-map-react/utils\";\nimport {\n  TableWrapper,\n  Table,\n  Row,\n  TableHead,\n  TableBody,\n  TableHeadCell,\n  TableCell\n} from \"./styles\";\n\nclass TableComponent extends Component {\n  handleChange = (e, key, current_table_index, type) => {\n    const { all_table_data, table_data, meta, setTableData } = this.props;\n    const tableIndex = all_table_data.findIndex(\n      data => data.meta.id === meta.id\n    );\n\n    const new_table_data = cloneDeep(table_data);\n\n    const new_meta = cloneDeep(meta);\n\n    if (type === \"meta\") {\n      new_meta[key] = e.target.value;\n    }\n\n    if (type === \"data\") {\n      new_table_data[current_table_index] = {\n        ...new_table_data[current_table_index],\n        [key]:\n          key === \"disabled\"\n            ? !new_table_data[current_table_index][key]\n            : e.target.value\n      };\n    }\n\n    const new_all_table_data = Object.assign([], all_table_data, {\n      [tableIndex]: {\n        meta: new_meta,\n        data: new_table_data\n      }\n    });\n\n    setTableData(new_all_table_data);\n\n    // Tried zooming out to show all pin in frame on value change of lat/lng after referencing stackoverflow but none was working. Will work on this afte basic functionalies are working.\n\n    //   var bounds = new window.google.maps.LatLngBounds();\n\n    //   new_all_table_data.forEach(element => {\n    //     element.data.forEach(item => {\n    //       console.log(item);\n    //       bounds.extend(\n    //         new window.google.maps.LatLng(+item.lat, +item.lng)\n    //         //   {\n    //         //   lat: +item.lat,\n    //         //   lng: +item.lng\n    //         // }\n    //       );\n    //     });\n    //   });\n\n    //   fitBounds(bounds, {\n    //     width: 640, // Map width in pixels\n    //     height: 380 // Map height in pixels\n    //   });\n  };\n\n  clearSelected = () => {\n    const { all_table_data, meta, setTableData } = this.props;\n\n    const tableIndex = all_table_data.findIndex(\n      data => data.meta.id === meta.id\n    );\n\n    const new_table_data = all_table_data[tableIndex].data.map(data =>\n      data.disabled\n        ? {\n            id: data.id,\n            lat: 0,\n            lng: 0,\n            volume: \"\",\n            name: \"\",\n            disabled: false\n          }\n        : data\n    );\n\n    const new_all_table_data = Object.assign([], all_table_data, {\n      [tableIndex]: {\n        meta,\n        data: new_table_data\n      }\n    });\n\n    setTableData(new_all_table_data);\n  };\n\n  render() {\n    const { table_data, meta } = this.props;\n\n    return (\n      <TableWrapper>\n        <div>\n          <input\n            value={meta.region}\n            onChange={e => this.handleChange(e, \"region\", null, \"meta\")}\n          />\n          <button type=\"button\" onClick={this.clearSelected}>\n            Delete Selected\n          </button>\n        </div>\n\n        <Table>\n          <TableHead>\n            <Row>\n              <TableHeadCell></TableHeadCell>\n\n              <TableHeadCell>Name</TableHeadCell>\n              <TableHeadCell>Long/Lat</TableHeadCell>\n              <TableHeadCell>Volume</TableHeadCell>\n            </Row>\n          </TableHead>\n          <TableBody>\n            {table_data.map((data, i) => (\n              <Row key={data.id}>\n                <TableCell>\n                  <input\n                    type=\"checkbox\"\n                    checked={data.disabled}\n                    onChange={e => this.handleChange(e, \"disabled\", i, \"data\")}\n                  />\n                </TableCell>\n                <TableCell>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={data.name}\n                    onChange={e => this.handleChange(e, \"name\", i, \"data\")}\n                  />\n                </TableCell>\n                <TableCell>\n                  <div className=\"two\">\n                    <input\n                      type=\"number\"\n                      value={data.lat}\n                      placeholder=\"Latitude\"\n                      onChange={e => this.handleChange(e, \"lat\", i, \"data\")}\n                    />\n                    <input\n                      type=\"number\"\n                      value={data.lng}\n                      placeholder=\"Longitude\"\n                      onChange={e => this.handleChange(e, \"lng\", i, \"data\")}\n                    />\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Volume\"\n                    value={data.volume}\n                    onChange={e => this.handleChange(e, \"volume\", i, \"data\")}\n                  />\n                </TableCell>\n              </Row>\n            ))}\n          </TableBody>\n        </Table>\n      </TableWrapper>\n    );\n  }\n}\n\nexport default TableComponent;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: inherit;\n  }\n\n  body {\n    box-sizing: border-box;\n  }\n\n  svg {\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nexport default GlobalStyles;\n","const mapStyles = [\n  { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\n  { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\n  { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#263c3f\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#6b9a76\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#38414e\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#212a37\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#9ca5b3\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#746855\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#1f2835\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#f3d19c\" }]\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#2f3948\" }]\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#17263c\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#515c6d\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.stroke\",\n    stylers: [{ color: \"#17263c\" }]\n  }\n];\n\nexport default mapStyles;\n","import styled, { css } from \"styled-components\";\n\n// Utilities start\n\nconst showMenuStyle = css`\n  transform: translateX(0);\n`;\n\n// Utilities end\n\n// Layout Start\n\nexport const Header = styled.header`\n  padding: 10px 20px;\n  background-color: ${props => props.theme.dark__yellow};\n`;\n\nexport const Nav = styled.nav`\n  position: fixed;\n  width: 250px;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  transform: translateX(-100%);\n  transition: all 0.3s ease-in;\n  background: white;\n  z-index: 1;\n\n  button {\n    width: 100%;\n    padding: 5px 8px;\n    backgroud: transparent;\n    font-size: 16px;\n    border: 1px solid ${props => props.theme.back};\n  }\n\n  ${props => (props.showMenu ? showMenuStyle : \"\")}\n`;\n\nexport const Main = styled.main`\n  padding: 10px 20px;\n`;\n\nexport const Footer = styled.footer`\n  padding: 10px 20px;\n`;\n\n// Layout End\n\nexport const TableContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n","import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport uuid from \"uuid/v4\";\n\nimport Theme from \"../constants/Theme\";\n\nimport MapComponent from \"../shared/Map\";\nimport TableComponent from \"../shared/Table\";\n\nimport GlobalStyles from \"../constants/GlobalStyles\";\nimport MapDarkStyle from \"../constants/MapDarkStyle\";\n\nimport { Header, Main, Footer, Nav, TableContainer } from \"./styles\";\n\nimport Sprite from \"../assets/sprite.svg\";\n\nconst theme_options = Object.keys(Theme);\n\nconst dummy_data = () => ({\n  meta: {\n    region: \"NCR\",\n    id: uuid()\n  },\n  data: [\n    {\n      id: uuid(),\n      lat: 28.7041,\n      lng: 77.1025,\n      volume: \"delhi volume\",\n      name: \"Delhi\",\n      disabled: false\n    },\n    {\n      id: uuid(),\n      lat: 28.4595,\n      lng: 77.0266,\n      volume: \"gurgaon volume\",\n      name: \"Gurgaon\",\n      disabled: false\n    },\n    {\n      id: uuid(),\n      lat: 28.5355,\n      lng: 77.391,\n      volume: \"noida volume\",\n      name: \"Noida\",\n      disabled: false\n    },\n    {\n      id: uuid(),\n      lat: 28.4089,\n      lng: 77.3178,\n      volume: \"faridabad volume\",\n      name: \"faridabad\",\n      disabled: false\n    }\n  ]\n});\n\nconst initial_table_data = [dummy_data()];\n\nfunction App() {\n  const [current_theme, setTheme] = useState(theme_options[0]);\n  const [table_data, setTableData] = useState(initial_table_data);\n  const [show_menu, setShowMenu] = useState(false);\n\n  return (\n    <ThemeProvider theme={Theme[current_theme]}>\n      <GlobalStyles />\n\n      <Header>\n        <svg>\n          <use xlinkHref={`${Sprite}#icon-menu`} />\n        </svg>\n      </Header>\n\n      <Nav show={show_menu} onClick={() => setShowMenu(true)}>\n        <button onClick={() => setShowMenu(false)}>Back</button>\n      </Nav>\n      <Main>\n        <MapComponent\n          options={{\n            styles: current_theme === theme_options[0] ? {} : MapDarkStyle\n          }}\n          table_data={table_data}\n        />\n\n        <br />\n\n        <hr />\n\n        <br />\n\n        <button\n          type=\"button\"\n          onClick={() => setTableData([...table_data, dummy_data()])}\n        >\n          Add Table\n        </button>\n\n        <br />\n\n        <TableContainer>\n          {table_data.map(data => (\n            <TableComponent\n              key={data.meta.id}\n              table_data={data.data}\n              all_table_data={table_data}\n              meta={data.meta}\n              setTableData={setTableData}\n            />\n          ))}\n        </TableContainer>\n      </Main>\n\n      <Footer>\n        <select value={current_theme} onChange={e => setTheme(e.target.value)}>\n          {theme_options.map(item => (\n            <option key={item} value={item}>\n              {item}\n            </option>\n          ))}\n        </select>\n      </Footer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sprite.a760dbb2.svg\";"],"sourceRoot":""}